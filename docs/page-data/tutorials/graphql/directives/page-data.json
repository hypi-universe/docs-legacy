{"componentChunkName":"component---src-templates-docs-js","path":"/tutorials/graphql/directives","result":{"data":{"site":{"siteMetadata":{"title":"Hypi Documentation","docsLocation":"https://github.com/hypi-universe/docs/tree/master/content"}},"mdx":{"fields":{"id":"f36e630b-4c69-56ba-8144-0128da756b6e","title":"Directives","slug":"/tutorials/00-graphql/07-directives"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Directives\",\n  \"metaTitle\": \"Hypi tutorial introducing GraphQL Directives.\",\n  \"metaDescription\": \"Introduction to GraphQL directives on the Hypi platform.\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"Overview\"), mdx(\"p\", null, \"A directive allows you to customise the behaviour of your data model.\\nHypi's built in directives allow you to tell Hypi how to interact with your fields.\"), mdx(\"h2\", null, \"So, what is a directive\"), mdx(\"p\", null, \"A \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"@\"), \" character followed by a series of character identifies a directive, optionally followed by a list of named arguments, which can appear after almost any form of syntax in the GraphQL query or schema languages.\"), mdx(\"p\", null, \"For example, we can imagine a UI component that has a summarised and detailed view, where one includes more fields than the other.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"  type Item {\\n       slug: String! @field(indexed: true, type: Keyword)\\n       title: String! @field(indexed: true)\\n       description: String @field(indexed: true)\\n       comments: [Comment!]\\n  }\\n\")), mdx(\"p\", null, \"Here, the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"@field\"), \" part of the model is a directive. It tells Hypi to index the field it appears next to so that data in that field is searchable with \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/reference/02-arcql\"\n  }), \"ArcQL\")), mdx(\"h2\", null, \"Built-in directives\"), mdx(\"p\", null, \"The Hypi platform provides many directives for you to use in your app.\"), mdx(\"h3\", null, \"@http\"), mdx(\"p\", null, \"When applied causes the value of the field it is applied to to be resolved using an HTTP query configured with the given parameters\\nVariable substitution is supported of the form \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"$variable.name\"), \" (See \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"http://velocity.apache.org/engine/1.7/user-guide.html\"\n  }), \"velocity template guide\"), \")\\nThe following may be referenced \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"vars\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"settings\"), \"\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"vars\"), \" refers to any arguments on the field the directive is applied to so \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"$vars.firstName\"), \" refers to the firstName arg of the field\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"settings\"), \" refers to any instance settings provided in the app\"), mdx(\"h3\", null, \"@tan\"), mdx(\"p\", null, \"A directive which allows any GraphQL definition's field to be provided by a Hypi Arc Tan function.\\nThis means that any field in your GraphQL model can get its value from a serverless function.\"), mdx(\"h3\", null, \"@api\"), mdx(\"p\", null, \"If present on an object then it controls which Hypi CRUD functions will be generated for the type.\\nIt can be used to prevent e.g. the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"create\"), \" function from being generated.\"), mdx(\"h3\", null, \"@secret\"), mdx(\"p\", null, \"Fields annotated with the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"@secret\"), \" directive are never returned. They can only be compared using ArcQL.\\nThis is good for password fields.\\n\", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Note\"), \": The value of these fields \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"CANNOT\"), \" be retrieved. You can only run queries to check if the original value matches.\"), mdx(\"p\", null, \"Secrets are encrypted using one of three available algorithms:\\n1. SHA3\\n2. BCRYPT\\n3. PKCS5\"), mdx(\"h3\", null, \"@field\"), mdx(\"p\", null, \"The \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"@field\"), \" directive is used to tell Hypi how to treat the field it is applied to.\\nThe \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"indexed\"), \" parameter, if true tells Hypi to index the contents of the field so that it can be searched.\\nThe \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"type\"), \" parameter tells Hypi how to index the field. There are two options, \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Keyword\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Text\"), \".\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Keyword\"), \" should be used for fields like IDs which need to be matched exactly.\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Text\"), \" should be used for field that need free form search e.g. like using a search engine.\"), mdx(\"h3\", null, \"@length\"), mdx(\"p\", null, \"Valid on String, Object and Array fields.\\nCheck if the string or array length matches the range.\\nChecks if the object's list of non-null fields matches the range\"), mdx(\"h3\", null, \"@notNull\"), mdx(\"p\", null, \"Check if the value is not null\"), mdx(\"h3\", null, \"@notEmpty\"), mdx(\"p\", null, \"Check if the string or array is not null nor empty (for strings verifies its not all whitespace).\"), mdx(\"h3\", null, \"@past\"), mdx(\"p\", null, \"Check if the date is in the past\"), mdx(\"h3\", null, \"@future\"), mdx(\"p\", null, \"Check if the date is in the future\"), mdx(\"h3\", null, \"@pattern\"), mdx(\"p\", null, \"Check if the field's value matches the regular expression given a match flag (see \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://docs.oracle.com/javase/8/docs/api/java/util/regex/Pattern.html\"\n  }), \"https://docs.oracle.com/javase/8/docs/api/java/util/regex/Pattern.html\"), \"  )\"), mdx(\"h3\", null, \"@email\"), mdx(\"p\", null, \"Check  if the field's value is valid email\"), mdx(\"h3\", null, \"@unique\"), mdx(\"p\", null, \"Adding this to any keyword indexed field ensures that no duplicates can be inserted for that field\"));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#overview","title":"Overview"},{"url":"#so-what-is-a-directive","title":"So, what is a directive"},{"url":"#built-in-directives","title":"Built-in directives","items":[{"url":"#http","title":"@http"},{"url":"#tan","title":"@tan"},{"url":"#api","title":"@api"},{"url":"#secret","title":"@secret"},{"url":"#field","title":"@field"},{"url":"#length","title":"@length"},{"url":"#notnull","title":"@notNull"},{"url":"#notempty","title":"@notEmpty"},{"url":"#past","title":"@past"},{"url":"#future","title":"@future"},{"url":"#pattern","title":"@pattern"},{"url":"#email","title":"@email"},{"url":"#unique","title":"@unique"}]}]},"parent":{"__typename":"File","relativePath":"tutorials/00-graphql/07-directives.md"},"frontmatter":{"metaTitle":"Hypi tutorial introducing GraphQL Directives.","metaDescription":"Introduction to GraphQL directives on the Hypi platform."}},"allMdx":{"edges":[{"node":{"fields":{"slug":"/getting-started","title":"Getting Started"}}},{"node":{"fields":{"slug":"/404","title":"Page Not Found"}}},{"node":{"fields":{"slug":"/introduction","title":"Introduction"}}},{"node":{"fields":{"slug":"/","title":"Platform Documentation"}}},{"node":{"fields":{"slug":"/references","title":"API & References"}}},{"node":{"fields":{"slug":"/products","title":"Products"}}},{"node":{"fields":{"slug":"/recipes","title":"Recipes"}}},{"node":{"fields":{"slug":"/tutorials","title":"Tutorials"}}},{"node":{"fields":{"slug":"/tutorials/00-graphql","title":"GraphQL"}}},{"node":{"fields":{"slug":"/tutorials/01-instance","title":"Instances"}}},{"node":{"fields":{"slug":"/references/00-app","title":"Apps"}}},{"node":{"fields":{"slug":"/tutorials/04-graph","title":"Graph Queries"}}},{"node":{"fields":{"slug":"/references/01-api","title":"API Setup"}}},{"node":{"fields":{"slug":"/tutorials/04-dateGranularity","title":"Timeseries Aggregations with Date Granularity"}}},{"node":{"fields":{"slug":"/references/03-authorisation","title":"Authorisation"}}},{"node":{"fields":{"slug":"/reference","title":"Reference"}}},{"node":{"fields":{"slug":"/references/04-api-gateway","title":"API Gateway"}}},{"node":{"fields":{"slug":"/references/07-workflow","title":"Workflows"}}},{"node":{"fields":{"slug":"/references/11-serverless-functions","title":"Serverless functions"}}},{"node":{"fields":{"slug":"/references/08-webhooks","title":"Webhooks"}}},{"node":{"fields":{"slug":"/references/10-triggers","title":"Triggers"}}},{"node":{"fields":{"slug":"/references/09-math-api","title":"Math API"}}},{"node":{"fields":{"slug":"/references/15-oauth2-login","title":"OAuth2 Login"}}},{"node":{"fields":{"slug":"/references/13-analytics","title":"Analytics"}}},{"node":{"fields":{"slug":"/references/16-iot","title":"IoT"}}},{"node":{"fields":{"slug":"/references/12-user-defined-functions","title":"User Defined Functions"}}},{"node":{"fields":{"slug":"/tutorials/00-graphql/01-intro","title":"Introduction"}}},{"node":{"fields":{"slug":"/getting-started/01-scratch","title":"Starting from scratch"}}},{"node":{"fields":{"slug":"/tutorials/00-graphql/03-query","title":"Queries"}}},{"node":{"fields":{"slug":"/tutorials/00-graphql/04-mutation","title":"Mutations"}}},{"node":{"fields":{"slug":"/tutorials/00-graphql/05-subscription","title":"Subscriptions"}}},{"node":{"fields":{"slug":"/tutorials/00-graphql/06-hypi-object","title":"Magic Hypi Object"}}},{"node":{"fields":{"slug":"/tutorials/00-graphql/07-directives","title":"Directives"}}},{"node":{"fields":{"slug":"/references/14-file-upload","title":"File upload API"}}},{"node":{"fields":{"slug":"/tutorials/00-graphql/08-interfaces","title":"Interfaces"}}},{"node":{"fields":{"slug":"/faq","title":"FAQs"}}},{"node":{"fields":{"slug":"/tutorials/03-crud","title":"Hypi GraphQL CRUD Tutorial"}}},{"node":{"fields":{"slug":"/references/02-crud","title":"CRUD"}}},{"node":{"fields":{"slug":"/references/05-aggregations-api","title":"Aggregations API"}}},{"node":{"fields":{"slug":"/references/06-rest-api","title":"RESTful APIs"}}},{"node":{"fields":{"slug":"/getting-started/02-angular","title":"Hypi + Angular"}}},{"node":{"fields":{"slug":"/tutorials/00-graphql/02-schema-and-types","title":"Schema & Types"}}},{"node":{"fields":{"slug":"/references/02-arcql","title":"ArcQL Filtering"}}}]}},"pageContext":{"isCreatedByStatefulCreatePages":false,"id":"f36e630b-4c69-56ba-8144-0128da756b6e"}}}