{"componentChunkName":"component---src-templates-docs-js","path":"/tutorials/graphql/query","result":{"data":{"site":{"siteMetadata":{"title":"Hypi Documentation","docsLocation":"https://github.com/hypi-universe/docs/tree/master/content"}},"mdx":{"fields":{"id":"28a7128f-2378-5ac7-ba94-f6372a92a31e","title":"Queries","slug":"/tutorials/00-graphql/03-query"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Queries\",\n  \"metaTitle\": \"Hypi tutorial introducing GraphQL.\",\n  \"metaDescription\": \"Introduction to GraphQL on the Hypi platform.\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"Overview\"), mdx(\"p\", null, \"Every GraphQL schema has a root type for both queries and mutations. The query type defines GraphQL operations that retrieve data from the server.\"), mdx(\"p\", null, \"GraphQL queries return only the data you define. To construct a query, you must identify fields within fields ( known as nested subfields) continuously, until you return only scalars.\"), mdx(\"h2\", null, \"GraphQL API\"), mdx(\"p\", null, \"The GraphQL API has a single endpoint: \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"https://api.hypi.app/graphql\"), \"\\n\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"You should construct queries like this:\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Note:\"), \" \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Arcql is Hypi's SQL-like query language used to filter, sort and paginate data in the platform.\")), mdx(\"div\", {\n    className: \"code-container\"\n  }, mdx(\"div\", {\n    className: \"code-column\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"   query getMyTodos($arcql:String) {\\n       todos(arcql:$arcql) {\\n         hypi {\\n            id\\n            created\\n          }\\n         description\\n         completed\\n       }\\n     }\\n\\n     # Variables\\n     {\\n        \\\"arcql\\\": \\\"* SORT hypi.updated DESC\\\"\\n     }\\n\"))), mdx(\"div\", {\n    className: \"code-column\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"{\\n       \\\"data\\\": {\\n         \\\"todos\\\": [\\n           {\\n              \\\"hypi\\\": {\\n               \\\"id\\\": \\\"c94144ec-52aa-4337-9d8b-15fa8ec5c979\\\"\\n               \\\"created\\\": \\\"2019-11-02T15:45:16Z\\\"\\n               }\\n              \\\"description\\\": \\\"Buy milk for the office\\\",\\n              \\\"completed\\\":\\\"false\\\",\\n           },\\n\\n           ]\\n         }\\n\\n }\\n\")))), mdx(\"br\", null), mdx(\"h2\", null, \"Authorization\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Note:\"), \" You need to pass the Authorization \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"token\"), \" header before querying to get the results. Here's Example of setting up your header with auth token.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"{\\n  \\\"url\\\": \\\"https://api.hypi.app/graphql/\\\",\\n  \\\"headers\\\": {\\n     \\\"Authorization\\\":\\\"Auth Token here. It can be copied from the Developer Hub\\\",\\n     \\\"hypi-domain\\\": \\\"my-domain.com\\\" // instance API domain\\n  }\\n},\\n\")), mdx(\"br\", null), mdx(\"h2\", null, \"Query Variables\"), mdx(\"p\", null, \"GraphQL Variables makes queries more dynamic and powerful, and they reduce complexity when passing mutation input objects. \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Here you can see variables in its simplest form.\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"query findTodoItem($arcql:String) {\\n     todos(arcql: $arcql) {\\n       item {\\n         description\\n         hypi {\\n          id\\n         }\\n       }\\n   }\\n}\\n\\nvariables {\\n   \\\"arcql\\\": \\\"hypi.id = 'abc-123'\\\"\\n}\\n\")), mdx(\"p\", null, \"There are three steps to using variables:\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"1.\"), \" Create the variable outside the operation in a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"variables\"), \" object:\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"2.\"), \"  The variable needs to be pass to the operation as an argument:\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"query($arcql:String!){\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"3.\"), \" Use the variable within the operation:\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"todos(arcql: $arcql) {\")), mdx(\"p\", null, \"This process makes the query argument dynamic. You can  change the value in the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"variables\"), \" object and keep the foundation of the query the same.\"), mdx(\"p\", null, \"Using variables as arguments lets you dynamically update values in the variables object without changing the query and using the Hypi \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"arcql\"), \" variable lets you\\nfilter, sort and paginate data in the platform.\"), mdx(\"p\", null, \" \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/reference/02-arcql\"\n  }), \"Learn more about ArcQL Filtering here!\")));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#overview","title":"Overview"},{"url":"#graphql-api","title":"GraphQL API"},{"url":"#authorization","title":"Authorization"},{"url":"#query-variables","title":"Query Variables"}]},"parent":{"__typename":"File","relativePath":"tutorials/00-graphql/03-query.md"},"frontmatter":{"metaTitle":"Hypi tutorial introducing GraphQL.","metaDescription":"Introduction to GraphQL on the Hypi platform."}},"allMdx":{"edges":[{"node":{"fields":{"slug":"/getting-started","title":"Getting Started"}}},{"node":{"fields":{"slug":"/404","title":"Page Not Found"}}},{"node":{"fields":{"slug":"/introduction","title":"Introduction"}}},{"node":{"fields":{"slug":"/","title":"Platform Documentation"}}},{"node":{"fields":{"slug":"/references","title":"API & References"}}},{"node":{"fields":{"slug":"/products","title":"Products"}}},{"node":{"fields":{"slug":"/recipes","title":"Recipes"}}},{"node":{"fields":{"slug":"/tutorials","title":"Tutorials"}}},{"node":{"fields":{"slug":"/tutorials/00-graphql","title":"GraphQL"}}},{"node":{"fields":{"slug":"/tutorials/01-instance","title":"Instances"}}},{"node":{"fields":{"slug":"/references/00-app","title":"Apps"}}},{"node":{"fields":{"slug":"/tutorials/04-graph","title":"Graph Queries"}}},{"node":{"fields":{"slug":"/references/01-api","title":"API Setup"}}},{"node":{"fields":{"slug":"/tutorials/04-dateGranularity","title":"Timeseries Aggregations with Date Granularity"}}},{"node":{"fields":{"slug":"/references/03-authorisation","title":"Authorisation"}}},{"node":{"fields":{"slug":"/reference","title":"Reference"}}},{"node":{"fields":{"slug":"/references/04-api-gateway","title":"API Gateway"}}},{"node":{"fields":{"slug":"/references/07-workflow","title":"Workflows"}}},{"node":{"fields":{"slug":"/references/11-serverless-functions","title":"Serverless functions"}}},{"node":{"fields":{"slug":"/references/08-webhooks","title":"Webhooks"}}},{"node":{"fields":{"slug":"/references/10-triggers","title":"Triggers"}}},{"node":{"fields":{"slug":"/references/09-math-api","title":"Math API"}}},{"node":{"fields":{"slug":"/references/15-oauth2-login","title":"OAuth2 Login"}}},{"node":{"fields":{"slug":"/references/13-analytics","title":"Analytics"}}},{"node":{"fields":{"slug":"/references/16-iot","title":"IoT"}}},{"node":{"fields":{"slug":"/references/12-user-defined-functions","title":"User Defined Functions"}}},{"node":{"fields":{"slug":"/tutorials/00-graphql/01-intro","title":"Introduction"}}},{"node":{"fields":{"slug":"/getting-started/01-scratch","title":"Starting from scratch"}}},{"node":{"fields":{"slug":"/tutorials/00-graphql/03-query","title":"Queries"}}},{"node":{"fields":{"slug":"/tutorials/00-graphql/04-mutation","title":"Mutations"}}},{"node":{"fields":{"slug":"/tutorials/00-graphql/05-subscription","title":"Subscriptions"}}},{"node":{"fields":{"slug":"/tutorials/00-graphql/06-hypi-object","title":"Magic Hypi Object"}}},{"node":{"fields":{"slug":"/tutorials/00-graphql/07-directives","title":"Directives"}}},{"node":{"fields":{"slug":"/references/14-file-upload","title":"File upload API"}}},{"node":{"fields":{"slug":"/tutorials/00-graphql/08-interfaces","title":"Interfaces"}}},{"node":{"fields":{"slug":"/faq","title":"FAQs"}}},{"node":{"fields":{"slug":"/tutorials/03-crud","title":"Hypi GraphQL CRUD Tutorial"}}},{"node":{"fields":{"slug":"/references/02-crud","title":"CRUD"}}},{"node":{"fields":{"slug":"/references/05-aggregations-api","title":"Aggregations API"}}},{"node":{"fields":{"slug":"/references/06-rest-api","title":"RESTful APIs"}}},{"node":{"fields":{"slug":"/getting-started/02-angular","title":"Hypi + Angular"}}},{"node":{"fields":{"slug":"/tutorials/00-graphql/02-schema-and-types","title":"Schema & Types"}}},{"node":{"fields":{"slug":"/references/02-arcql","title":"ArcQL Filtering"}}}]}},"pageContext":{"isCreatedByStatefulCreatePages":false,"id":"28a7128f-2378-5ac7-ba94-f6372a92a31e"}}}