{"componentChunkName":"component---src-templates-docs-js","path":"/references/file-upload","result":{"data":{"site":{"siteMetadata":{"title":"Hypi Documentation","docsLocation":"https://github.com/hypi-universe/docs/tree/master/content"}},"mdx":{"fields":{"id":"4d1a1a8c-9e67-5397-8a66-231f5b93c946","title":"File upload API","slug":"/references/14-file-upload"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"File upload API\",\n  \"metaTitle\": \"Hypi Platform Documentation for its File upload API\",\n  \"metaDescription\": \"Hypi platform documentation demonstrating how to upload files to the Hypi platform\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"Overview\"), mdx(\"p\", null, \"Many applications require the ability to accept file uploads. Hypi makes it easy to support this in your applications by providing a simple API to do so.\\nHypi's core app includes a type definition called \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"File\"), \". When files are uploaded, an object of this type is created which can later by queried via REST or GraphQL.\\nThe definition includes meta data about the file, including its file, media type (if it could be determined), the URL to download it and more.\"), mdx(\"h2\", null, \"GraphQL File definition\"), mdx(\"p\", null, \"The file object definition captures various information about the file uploaded.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-graphql\"\n  }), \"type File {\\n  name: String!\\n  directory: String!\\n  path: String!\\n  isDirectory: Boolean!\\n  status: FileStatus\\n  url: URL\\n  children: [File!]\\n  #media type\\n  type: String\\n  size: Long\\n  extension: String\\n  isStared: Boolean\\n  isSharable: Boolean\\n  content: String\\n}\\n\")), mdx(\"h2\", null, \"Upload endpoint\"), mdx(\"p\", null, \"To upload a file (any file can be uploaded, image, pdf, etc), use the following endpoint\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"POST /upload/**\")), mdx(\"p\", null, \"Note the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"**\"), \", if you use a path like \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"/upload/my/path\"), \", then the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"File\"), \" object will have a directory value of \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"/my/path\"), \".\\n1. The \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"type\"), \" field will be populated with the media type e.g. \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"text/plain\"), \" if it could be determined.\\n2. The \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"size\"), \" will be set to the size of the file in bytes.\\n3. The \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"status\"), \" will be set to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"UPLOADED\"), \" on success\\n4. The \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"name\"), \" will be set to the original file name e.g. \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"my-file.txt\"), \"\\n5. The \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"url\"), \" will be set and has a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"path\"), \" that gives the URL you should use to later download the file.\"), mdx(\"h2\", null, \"Download endpoint\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"GET /file/<path>.ext\")), mdx(\"p\", null, \"To download a file uploaded to the platform, the above URL pattern should be used.\"), mdx(\"p\", null, \"The \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<path>\"), \" is by default the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ID\"), \" of the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"File\"), \" object.\\nThe \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \".ext\"), \" is the original extension of the file e.g. \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \".txt\"), \".\"), mdx(\"h2\", null, \"curl upload example\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-shell\",\n    \"metastring\": \"script\",\n    \"script\": true\n  }), \"auth='<hypi-auth-token>'\\ncurl -v https://api.hypi.app/upload/ -H \\\"Accept: application/json\\\" -H \\\"Authorization: $auth\\\" -H 'hypi-domain: <instance-domain>' -F 0=@/path/to/file.txt\\n\")), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"The response of the upload is JSON\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"The \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Authorization\"), \" header is required\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"The \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"hypi-domain\"), \" header is required (like other API requests)\")), mdx(\"h2\", null, \"curl download example\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-shell\",\n    \"metastring\": \"script\",\n    \"script\": true\n  }), \"curl -v https://api.hypi.app/file/<id>.ext -H \\\"Authorization: $auth\\\"\\n\")), mdx(\"p\", null, \"In this example we provide an authorisation token. This is because files are private to the account which created it by default.\\nTo give access to other users or allow anonymous download a permission must be created with appropriate policies.\"), mdx(\"p\", null, \"For example, to give the anonymous users access (no token required), use an \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"AccountPolicy\"), \" to grant the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"anonymous\"), \" user account read access.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-graphql\"\n  }), \"mutation {\\n  upsert(\\n    values: {\\n      Permission: [\\n        {\\n          name: \\\"Grant access to anonymous user\\\"\\n          decisionStrategy: Unanimous\\n          type: \\\"File\\\"\\n          resource: \\\"<file-id>\\\"\\n          scopes: [\\\"*\\\"]\\n          operationType: Query\\n          operations: [\\\"find\\\"]\\n          #includeAllAccounts: true, //wildcard so all accounts can access\\n          policies: [\\n            {\\n              hypi: { impl: \\\"AccountPolicy\\\" }\\n              name: \\\"Grant user anonymous access to my file\\\"\\n              logic: Positive\\n              accounts: [{ hypi: { id: \\\"anonymous\\\" } }]\\n            }\\n          ]\\n        }\\n      ]\\n    }\\n  ) {\\n    id\\n  }\\n}\\n\")), mdx(\"p\", null, \"In this example we explicitly give anonymous users access to the file uploaded.\\nThis could also have been done by giving access to \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"all\"), \" accounts in the app instance by setting \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"includeAllAccounts\"), \" to true.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-shell\",\n    \"metastring\": \"script\",\n    \"script\": true\n  }), \"curl -v https://api.hypi.app/file/<id>.ext\\n\")), mdx(\"p\", null, \"Due to the permission above, the curl request can now be made without any authorisation headers.\"));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#overview","title":"Overview"},{"url":"#graphql-file-definition","title":"GraphQL File definition"},{"url":"#upload-endpoint","title":"Upload endpoint"},{"url":"#download-endpoint","title":"Download endpoint"},{"url":"#curl-upload-example","title":"curl upload example"},{"url":"#curl-download-example","title":"curl download example"}]},"parent":{"__typename":"File","relativePath":"references/14-file-upload.md"},"frontmatter":{"metaTitle":"Hypi Platform Documentation for its File upload API","metaDescription":"Hypi platform documentation demonstrating how to upload files to the Hypi platform"}},"allMdx":{"edges":[{"node":{"fields":{"slug":"/getting-started","title":"Getting Started"}}},{"node":{"fields":{"slug":"/404","title":"Page Not Found"}}},{"node":{"fields":{"slug":"/introduction","title":"Introduction"}}},{"node":{"fields":{"slug":"/","title":"Platform Documentation"}}},{"node":{"fields":{"slug":"/references","title":"API & References"}}},{"node":{"fields":{"slug":"/products","title":"Products"}}},{"node":{"fields":{"slug":"/recipes","title":"Recipes"}}},{"node":{"fields":{"slug":"/tutorials","title":"Tutorials"}}},{"node":{"fields":{"slug":"/tutorials/00-graphql","title":"GraphQL"}}},{"node":{"fields":{"slug":"/tutorials/01-instance","title":"Instances"}}},{"node":{"fields":{"slug":"/references/00-app","title":"Apps"}}},{"node":{"fields":{"slug":"/tutorials/04-graph","title":"Graph Queries"}}},{"node":{"fields":{"slug":"/references/01-api","title":"API Setup"}}},{"node":{"fields":{"slug":"/tutorials/04-dateGranularity","title":"Timeseries Aggregations with Date Granularity"}}},{"node":{"fields":{"slug":"/references/03-authorisation","title":"Authorisation"}}},{"node":{"fields":{"slug":"/reference","title":"Reference"}}},{"node":{"fields":{"slug":"/references/04-api-gateway","title":"API Gateway"}}},{"node":{"fields":{"slug":"/references/07-workflow","title":"Workflows"}}},{"node":{"fields":{"slug":"/references/11-serverless-functions","title":"Serverless functions"}}},{"node":{"fields":{"slug":"/references/08-webhooks","title":"Webhooks"}}},{"node":{"fields":{"slug":"/references/10-triggers","title":"Triggers"}}},{"node":{"fields":{"slug":"/references/09-math-api","title":"Math API"}}},{"node":{"fields":{"slug":"/references/15-oauth2-login","title":"OAuth2 Login"}}},{"node":{"fields":{"slug":"/references/13-analytics","title":"Analytics"}}},{"node":{"fields":{"slug":"/references/16-iot","title":"IoT"}}},{"node":{"fields":{"slug":"/references/12-user-defined-functions","title":"User Defined Functions"}}},{"node":{"fields":{"slug":"/tutorials/00-graphql/01-intro","title":"Introduction"}}},{"node":{"fields":{"slug":"/getting-started/01-scratch","title":"Starting from scratch"}}},{"node":{"fields":{"slug":"/tutorials/00-graphql/03-query","title":"Queries"}}},{"node":{"fields":{"slug":"/tutorials/00-graphql/04-mutation","title":"Mutations"}}},{"node":{"fields":{"slug":"/tutorials/00-graphql/05-subscription","title":"Subscriptions"}}},{"node":{"fields":{"slug":"/tutorials/00-graphql/06-hypi-object","title":"Magic Hypi Object"}}},{"node":{"fields":{"slug":"/tutorials/00-graphql/07-directives","title":"Directives"}}},{"node":{"fields":{"slug":"/references/14-file-upload","title":"File upload API"}}},{"node":{"fields":{"slug":"/tutorials/00-graphql/08-interfaces","title":"Interfaces"}}},{"node":{"fields":{"slug":"/faq","title":"FAQs"}}},{"node":{"fields":{"slug":"/tutorials/03-crud","title":"Hypi GraphQL CRUD Tutorial"}}},{"node":{"fields":{"slug":"/references/02-crud","title":"CRUD"}}},{"node":{"fields":{"slug":"/references/05-aggregations-api","title":"Aggregations API"}}},{"node":{"fields":{"slug":"/references/06-rest-api","title":"RESTful APIs"}}},{"node":{"fields":{"slug":"/getting-started/02-angular","title":"Hypi + Angular"}}},{"node":{"fields":{"slug":"/tutorials/00-graphql/02-schema-and-types","title":"Schema & Types"}}},{"node":{"fields":{"slug":"/references/02-arcql","title":"ArcQL Filtering"}}}]}},"pageContext":{"isCreatedByStatefulCreatePages":false,"id":"4d1a1a8c-9e67-5397-8a66-231f5b93c946"}}}