{"componentChunkName":"component---src-templates-docs-js","path":"/references/oauth2-login","result":{"data":{"site":{"siteMetadata":{"title":"Hypi Documentation","docsLocation":"https://github.com/hypi-universe/docs/tree/master/content"}},"mdx":{"fields":{"id":"bd493ad9-e4f3-57ba-9c6e-0bdd488816f2","title":"OAuth2 Login","slug":"/references/15-oauth2-login"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"OAuth2 Login\",\n  \"metaTitle\": \"Hypi Platform OAuth2 Login Documentation\",\n  \"metaDescription\": \"Hypi platform documentation for its OAuth2 login support\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"Overview\"), mdx(\"p\", null, \"OAuth2 Authorization framework enables a third-party application to obtain limited access to an external Http service on\\nbehalf of the resource owner by orchestrating an interaction between the resource owner and the Http service. On Hypi,\\napplication developers can utilize OAuth2 functionality out of the box. Hypi supports a rich set of Http services\\nsuch as Facebook, Google, Github, Twitter, and more.  The following section explains how to integrate OAuth2 functionality\\nin your apps.\"), mdx(\"h2\", null, \"How to setup and use OAuth2 Login?\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Register Developer Account\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Create OAuthProvider Object\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Trigger Authorization Flow\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Retrieve Access Token\")), mdx(\"h3\", null, \"Register Developer Account\"), mdx(\"p\", null, \"External Http services enable developers to register applications on their platforms and then provide \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ClientKey\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ClientSecret\"), \"\\nthat can be used at subsequent API requests. For example, for Google one can register an application on \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"https://console.developers.google.com/apis/credentials\"), \".\"), mdx(\"h3\", null, \"Create OAuthProvider Object\"), mdx(\"p\", null, \"Once the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ClientKey\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ClientSecret\"), \" have been obtained, then start by using GraphQL to integrate OAuth2 to your application on Hypi.\"), mdx(\"div\", {\n    className: \"code-container\"\n  }, mdx(\"div\", {\n    className: \"code-column\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-graphql\"\n  }), \"mutation upsert($values:HypiUpsertInputUnion!) {\\n  upsert(values:$values){\\n    id\\n  }\\n}\\n\")))), mdx(\"p\", null, \"Providing the following JSON payload for the GraphQL request under the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Variables\"), \" tab. Here is an example for Google OAuth2 configuration:\"), mdx(\"div\", {\n    className: \"code-container\"\n  }, mdx(\"div\", {\n    className: \"code-column\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-json\"\n  }), \"{\\n  \\\"values\\\": {\\n    \\\"OAuthProvider\\\": {\\n      \\\"clientId\\\": \\\"Your Client Key\\\",\\n      \\\"clientSecret\\\": \\\"Your Client Secret\\\",\\n      \\\"clientAuthenticationMethod\\\": \\\"basic\\\",\\n      \\\"authorizationGrantType\\\": \\\"authorization_code\\\",\\n      \\\"redirectUriTemplate\\\": \\\"{baseUrl}/login/oauth2/code/{registrationId}\\\",\\n      \\\"scopes\\\": [\\n        \\\"openid\\\",\\n        \\\"profile\\\",\\n        \\\"email\\\",\\n        \\\"address\\\",\\n        \\\"phone\\\",\\n        \\\"add more comma separated list of scopes\\\"\\n      ],\\n      \\\"authorizationUri\\\": \\\"https://accounts.google.com/o/oauth2/v2/auth\\\",\\n      \\\"tokenUri\\\": \\\"https://www.googleapis.com/oauth2/v4/token\\\",\\n      \\\"userInfoUri\\\": \\\"https://www.googleapis.com/oauth2/v3/userinfo\\\",\\n      \\\"userInfoAuthenticationMethod\\\": \\\"header\\\",\\n      \\\"userNameAttributeName\\\": \\\"sub\\\",\\n      \\\"jwkSetUri\\\": \\\"https://www.googleapis.com/oauth2/v3/certs\\\",\\n      \\\"configurationMetadata\\\": [\\n        {\\n          \\\"key\\\": \\\"foo\\\",\\n          \\\"value\\\": \\\"bar\\\"\\n        },\\n        {\\n          \\\"key\\\": \\\"baz\\\",\\n          \\\"value\\\": \\\"qux\\\"\\n        }\\n      ],\\n      \\\"clientName\\\": \\\"Google\\\",\\n      \\\"hypiSuccessRedirectUri\\\": \\\"https://yourHypiAppDomain.com/successfulLogin\\\"\\n    }\\n  }\\n}\\n\\n\")))), mdx(\"h4\", null, \"Enum Parameters\"), mdx(\"p\", null, \"The following variables can take any value as long as it is described on the enum type in the core GraphQL schema on Hypi.\"), mdx(\"div\", {\n    className: \"code-container\"\n  }, mdx(\"div\", {\n    className: \"code-column\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-graphql\"\n  }), \"enum UserNameAttributeName {\\n  iss\\n  sub\\n  aud\\n  exp\\n  iat\\n  auth_time\\n  nonce\\n  acr\\n  amr\\n  azp\\n  at_hash\\n  c_hash\\n}\\n\\nenum AuthenticationMethod {\\n  header\\n  form\\n  query\\n}\\n\\nenum AuthorizationGrantType {\\n  authorization_code\\n  implicit\\n  refresh_token\\n  client_credentials\\n}\\n\\nenum ClientAuthenticationMethod {\\n  basic\\n  post\\n}\\n\")))), mdx(\"p\", null, \"The definition of the above parameters can be found in the official standard specification of OAuth2 \", mdx(\"a\", {\n    href: \"https://tools.ietf.org/html/rfc6749\"\n  }, \"Read more\")), mdx(\"h4\", null, \"Provider Endpoints\"), mdx(\"p\", null, \"The following parameters are specific to the external Http service.\"), mdx(\"div\", {\n    className: \"code-container\"\n  }, mdx(\"div\", {\n    className: \"code-column\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-json\"\n  }), \"{\\n  \\\"authorizationUri\\\": \\\"\\\",\\n  \\\"tokenUri\\\": \\\"\\\",\\n  \\\"userInfoUri\\\": \\\"\\\",\\n  \\\"jwkSetUri\\\": \\\"\\\"\\n}\\n\")))), mdx(\"p\", null, \"For Google, the values would be:\"), mdx(\"div\", {\n    className: \"code-container\"\n  }, mdx(\"div\", {\n    className: \"code-column\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-json\"\n  }), \"{\\n  \\\"authorizationUri\\\": \\\"https://accounts.google.com/o/oauth2/v2/auth\\\",\\n  \\\"tokenUri\\\": \\\"https://www.googleapis.com/oauth2/v4/token\\\",\\n  \\\"userInfoUri\\\": \\\"https://www.googleapis.com/oauth2/v3/userinfo\\\",\\n  \\\"jwkSetUri\\\": \\\"https://www.googleapis.com/oauth2/v3/certs\\\"\\n}\\n\")))), mdx(\"p\", null, \"For GitHub, the values would be:\"), mdx(\"div\", {\n    className: \"code-container\"\n  }, mdx(\"div\", {\n    className: \"code-column\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-json\"\n  }), \"{\\n    authorizationUri: https://github.com/login/oauth/authorize\\n    tokenUri: https://github.com/login/oauth/access_token\\n    userInfoUri: https://api.github.com/user\\n}\\n\")))), mdx(\"h4\", null, \"Redirection URIs\"), mdx(\"p\", null, \"The \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"redirectUriTemplate\"), \" variable is reserved for Hypi in order to handle the callback response from the external Http\\nservice. It is always set to as follows:\"), mdx(\"div\", {\n    className: \"code-container\"\n  }, mdx(\"div\", {\n    className: \"code-column\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-json\"\n  }), \"{\\n  \\\"redirectUriTemplate\\\": \\\"{baseUrl}/login/oauth2/code/{registrationId}\\\"\\n}\\n\")))), mdx(\"p\", null, \"Then provide the redirection Uri that the enduser should land on after the OAuth2 flow is complete. The value must represent\\na valid Http formatted Uri.\"), mdx(\"div\", {\n    className: \"code-container\"\n  }, mdx(\"div\", {\n    className: \"code-column\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-json\"\n  }), \"{\\n  \\\"\\\"hypiSuccessRedirectUri\\\": \\\"https://yourHypiAppDomain.com/successfulLogin\\\"\\n}\\n\")))), mdx(\"p\", null, \"Hypi will add a query parameter \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"token\"), \" to the redirectUri that can be used to communicate with Hypi Platform representing\\nthe resource owner who has completed the authorization process. This token is the same as if you were to call the built in\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"login\"), \" or \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"loginByEmail\"), \" methods in Hypi i.e. it is a JWT token which can be used to call any Hypi API that would otherwise be\\ncalled with a token returned by one of these methods.\"), mdx(\"h3\", null, \"Trigger Authorization Flow\"), mdx(\"p\", null, \"In order to start the authorization process, send the user to the following URL\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"https://api.hypi.app/graphql/oauth2/authorization/${registrationId\")), mdx(\"p\", null, \"The \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"registrationId\"), \" is constructed as \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"instanceId\"), \"-\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"OAuthProviderId\"), \". \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"instanceId\"), \" is the Hypi App Instance ID and\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"OAuthProviderId\"), \" is the ID of the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"OAuthProvider\"), \" which is created in the first step. For example, if\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"instanceId\"), \" is \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"NOV5MNZTF01Q8XIUCCA099CXZY\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"OAuthProviderId\"), \" is \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"01ERDGNV0W50J8WZZRVXR4KASC\"), \"\\nthen the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"registrationId\"), \" is \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"NOV5MNZTF01Q8XIUCCA099CXZY-01ERDGNV0W50J8WZZRVXR4KASC\"), \"\\nand the URL to initialize the flow is\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"https://api.hypi.app/graphql/oauth2/authorization/NOV5MNZTF01Q8XIUCCA099CXZY-01ERDGNV0W50J8WZZRVXR4KASC\")), mdx(\"h3\", null, \"Retrieve Access Token\"), mdx(\"p\", null, \"Hypi stores the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"accessToken\"), \" and the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"refreshToken\"), \" and they can be found on the GraphQL type \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"OAuth2AuthorizedClient\"), \".\"), mdx(\"div\", {\n    className: \"code-container\"\n  }, mdx(\"div\", {\n    className: \"code-column\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-graphql\"\n  }), \"type OAuth2AuthorizedClient {\\n  clientRegistrationId: String\\n  principalName: String\\n  accessToken: String\\n  refreshToken: String\\n}\\n\")))));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#overview","title":"Overview"},{"url":"#how-to-setup-and-use-oauth2-login","title":"How to setup and use OAuth2 Login?","items":[{"url":"#register-developer-account","title":"Register Developer Account"},{"url":"#create-oauthprovider-object","title":"Create OAuthProvider Object","items":[{"url":"#enum-parameters","title":"Enum Parameters"},{"url":"#provider-endpoints","title":"Provider Endpoints"},{"url":"#redirection-uris","title":"Redirection URIs"}]},{"url":"#trigger-authorization-flow","title":"Trigger Authorization Flow"},{"url":"#retrieve-access-token","title":"Retrieve Access Token"}]}]},"parent":{"__typename":"File","relativePath":"references/15-oauth2-login.md"},"frontmatter":{"metaTitle":"Hypi Platform OAuth2 Login Documentation","metaDescription":"Hypi platform documentation for its OAuth2 login support"}},"allMdx":{"edges":[{"node":{"fields":{"slug":"/getting-started","title":"Getting Started"}}},{"node":{"fields":{"slug":"/404","title":"Page Not Found"}}},{"node":{"fields":{"slug":"/introduction","title":"Introduction"}}},{"node":{"fields":{"slug":"/","title":"Platform Documentation"}}},{"node":{"fields":{"slug":"/references","title":"API & References"}}},{"node":{"fields":{"slug":"/products","title":"Products"}}},{"node":{"fields":{"slug":"/recipes","title":"Recipes"}}},{"node":{"fields":{"slug":"/tutorials","title":"Tutorials"}}},{"node":{"fields":{"slug":"/tutorials/00-graphql","title":"GraphQL"}}},{"node":{"fields":{"slug":"/tutorials/01-instance","title":"Instances"}}},{"node":{"fields":{"slug":"/references/00-app","title":"Apps"}}},{"node":{"fields":{"slug":"/tutorials/04-graph","title":"Graph Queries"}}},{"node":{"fields":{"slug":"/references/01-api","title":"API Setup"}}},{"node":{"fields":{"slug":"/tutorials/04-dateGranularity","title":"Timeseries Aggregations with Date Granularity"}}},{"node":{"fields":{"slug":"/references/03-authorisation","title":"Authorisation"}}},{"node":{"fields":{"slug":"/reference","title":"Reference"}}},{"node":{"fields":{"slug":"/references/04-api-gateway","title":"API Gateway"}}},{"node":{"fields":{"slug":"/references/07-workflow","title":"Workflows"}}},{"node":{"fields":{"slug":"/references/11-serverless-functions","title":"Serverless functions"}}},{"node":{"fields":{"slug":"/references/08-webhooks","title":"Webhooks"}}},{"node":{"fields":{"slug":"/references/10-triggers","title":"Triggers"}}},{"node":{"fields":{"slug":"/references/09-math-api","title":"Math API"}}},{"node":{"fields":{"slug":"/references/15-oauth2-login","title":"OAuth2 Login"}}},{"node":{"fields":{"slug":"/references/13-analytics","title":"Analytics"}}},{"node":{"fields":{"slug":"/references/16-iot","title":"IoT"}}},{"node":{"fields":{"slug":"/references/12-user-defined-functions","title":"User Defined Functions"}}},{"node":{"fields":{"slug":"/tutorials/00-graphql/01-intro","title":"Introduction"}}},{"node":{"fields":{"slug":"/getting-started/01-scratch","title":"Starting from scratch"}}},{"node":{"fields":{"slug":"/tutorials/00-graphql/03-query","title":"Queries"}}},{"node":{"fields":{"slug":"/tutorials/00-graphql/04-mutation","title":"Mutations"}}},{"node":{"fields":{"slug":"/tutorials/00-graphql/05-subscription","title":"Subscriptions"}}},{"node":{"fields":{"slug":"/tutorials/00-graphql/06-hypi-object","title":"Magic Hypi Object"}}},{"node":{"fields":{"slug":"/tutorials/00-graphql/07-directives","title":"Directives"}}},{"node":{"fields":{"slug":"/references/14-file-upload","title":"File upload API"}}},{"node":{"fields":{"slug":"/tutorials/00-graphql/08-interfaces","title":"Interfaces"}}},{"node":{"fields":{"slug":"/faq","title":"FAQs"}}},{"node":{"fields":{"slug":"/tutorials/03-crud","title":"Hypi GraphQL CRUD Tutorial"}}},{"node":{"fields":{"slug":"/references/02-crud","title":"CRUD"}}},{"node":{"fields":{"slug":"/references/05-aggregations-api","title":"Aggregations API"}}},{"node":{"fields":{"slug":"/references/06-rest-api","title":"RESTful APIs"}}},{"node":{"fields":{"slug":"/getting-started/02-angular","title":"Hypi + Angular"}}},{"node":{"fields":{"slug":"/tutorials/00-graphql/02-schema-and-types","title":"Schema & Types"}}},{"node":{"fields":{"slug":"/references/02-arcql","title":"ArcQL Filtering"}}}]}},"pageContext":{"isCreatedByStatefulCreatePages":false,"id":"bd493ad9-e4f3-57ba-9c6e-0bdd488816f2"}}}