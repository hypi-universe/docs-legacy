{"componentChunkName":"component---src-templates-docs-js","path":"/references/webhooks","result":{"data":{"site":{"siteMetadata":{"title":"Hypi Documentation","docsLocation":"https://github.com/hypi-universe/docs/tree/master/content"}},"mdx":{"fields":{"id":"5661fe48-8184-5498-99dc-061bb29d0f84","title":"Webhooks","slug":"/references/08-webhooks"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Webhooks\",\n  \"metaTitle\": \"Hypi Platform CRUD Documentation\",\n  \"metaDescription\": \"Hypi platform documentation for adding Webhooks into your app\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"Overview\"), mdx(\"p\", null, \"Webhooks provide a way for external APIs to notify you when some event has occured in their system.\\nThat is a typical usecase for this API.\"), mdx(\"p\", null, \"These APIs are generally not secure. Different providers have different mechanisms for proving to you that the request is genuinely from them.\\nHypi provides you access to all the data sent in the request, this enables you to perform verification as you see fit.\"), mdx(\"p\", null, \"On this page, the following schema is used:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-graphql\"\n  }), \"type Query {\\n  myInlineFn(payload: WebhookPayload): WebhookResponse @tan(type:Groovy, inline: \\\"\\\"\\\"\\n    return [\\n      \\\"status\\\": 200,\\n      \\\"headers\\\": payload.headers,\\n      \\\"body\\\": payload.url.host + \\\":\\\" + payload.url.port + payload.url.path + \\\"?\\\" + payload.url.queryParams + \\\"<>\\\" + payload.body\\n    ]\\n  \\\"\\\"\\\")\\n}\\n\")), mdx(\"h2\", null, \"Defined types\"), mdx(\"p\", null, \"A function must be defined which will process the Webhook request.\\nHypi defines both the argument and response type that this function must use.\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"Required\"), mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"The function signature MUST be \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"(payload: WebhookPayload): WebhookResponse\"), \" for the webhook to work correctly.\")), mdx(\"h2\", null, \"Example\"), mdx(\"p\", null, \"A simple webhook example looks like this:\"), mdx(\"div\", {\n    className: \"code-container\"\n  }, mdx(\"div\", {\n    className: \"code-column\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"#GraphQL query\\nmutation Upsert($values: HypiUpsertInputUnion!) {\\n  upsert(values: $values) {\\n    id\\n  }\\n}\\n# Data\\n{\\n  \\\"values\\\": {\\n    \\\"Webhook\\\": [\\n      {\\n  \\\"hypi\\\": {\\n    \\\"id\\\": \\\"wid\\\"\\n  },\\n  \\\"name\\\": \\\"wh1\\\",\\n  \\\"query\\\": {\\n    \\\"type\\\": \\\"Query\\\",\\n    \\\"field\\\": \\\"myInlineFn\\\"\\n  }\\n}\\n    ]\\n  }\\n}\\n\"))), mdx(\"div\", {\n    className: \"code-column\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-json\"\n  }), \"{\\n  \\\"data\\\": {\\n    \\\"upsert\\\": [\\n      {\\n        \\\"id\\\": \\\"wid\\\"\\n      }\\n    ]\\n  }\\n}\\n\")))), mdx(\"p\", null, \"Once a Webhook is created, it can be called by making a request to:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://api.hypi.app/webhook/%7Bdomain%7D/%7Bwebhook\"\n  }), \"https://api.hypi.app/webhook/{domain}/{webhook\"), \" name}\")), mdx(\"p\", null, \"where \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"{domain}\"), \" is the instance domain for you app and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"{webhook name}\"), \" is the name of the webhook to be executed.\\nIn the example on this page, the name is \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"wh1\"), \".\"));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#overview","title":"Overview"},{"url":"#defined-types","title":"Defined types"},{"url":"#example","title":"Example"}]},"parent":{"__typename":"File","relativePath":"references/08-webhooks.md"},"frontmatter":{"metaTitle":"Hypi Platform CRUD Documentation","metaDescription":"Hypi platform documentation for adding Webhooks into your app"}},"allMdx":{"edges":[{"node":{"fields":{"slug":"/getting-started","title":"Getting Started"}}},{"node":{"fields":{"slug":"/404","title":"Page Not Found"}}},{"node":{"fields":{"slug":"/introduction","title":"Introduction"}}},{"node":{"fields":{"slug":"/","title":"Platform Documentation"}}},{"node":{"fields":{"slug":"/references","title":"API & References"}}},{"node":{"fields":{"slug":"/products","title":"Products"}}},{"node":{"fields":{"slug":"/recipes","title":"Recipes"}}},{"node":{"fields":{"slug":"/tutorials","title":"Tutorials"}}},{"node":{"fields":{"slug":"/tutorials/00-graphql","title":"GraphQL"}}},{"node":{"fields":{"slug":"/tutorials/01-instance","title":"Instances"}}},{"node":{"fields":{"slug":"/references/00-app","title":"Apps"}}},{"node":{"fields":{"slug":"/tutorials/04-graph","title":"Graph Queries"}}},{"node":{"fields":{"slug":"/references/01-api","title":"API Setup"}}},{"node":{"fields":{"slug":"/tutorials/04-dateGranularity","title":"Timeseries Aggregations with Date Granularity"}}},{"node":{"fields":{"slug":"/references/03-authorisation","title":"Authorisation"}}},{"node":{"fields":{"slug":"/reference","title":"Reference"}}},{"node":{"fields":{"slug":"/references/04-api-gateway","title":"API Gateway"}}},{"node":{"fields":{"slug":"/references/07-workflow","title":"Workflows"}}},{"node":{"fields":{"slug":"/references/11-serverless-functions","title":"Serverless functions"}}},{"node":{"fields":{"slug":"/references/08-webhooks","title":"Webhooks"}}},{"node":{"fields":{"slug":"/references/10-triggers","title":"Triggers"}}},{"node":{"fields":{"slug":"/references/09-math-api","title":"Math API"}}},{"node":{"fields":{"slug":"/references/15-oauth2-login","title":"OAuth2 Login"}}},{"node":{"fields":{"slug":"/references/13-analytics","title":"Analytics"}}},{"node":{"fields":{"slug":"/references/16-iot","title":"IoT"}}},{"node":{"fields":{"slug":"/references/12-user-defined-functions","title":"User Defined Functions"}}},{"node":{"fields":{"slug":"/tutorials/00-graphql/01-intro","title":"Introduction"}}},{"node":{"fields":{"slug":"/getting-started/01-scratch","title":"Starting from scratch"}}},{"node":{"fields":{"slug":"/tutorials/00-graphql/03-query","title":"Queries"}}},{"node":{"fields":{"slug":"/tutorials/00-graphql/04-mutation","title":"Mutations"}}},{"node":{"fields":{"slug":"/tutorials/00-graphql/05-subscription","title":"Subscriptions"}}},{"node":{"fields":{"slug":"/tutorials/00-graphql/06-hypi-object","title":"Magic Hypi Object"}}},{"node":{"fields":{"slug":"/tutorials/00-graphql/07-directives","title":"Directives"}}},{"node":{"fields":{"slug":"/references/14-file-upload","title":"File upload API"}}},{"node":{"fields":{"slug":"/tutorials/00-graphql/08-interfaces","title":"Interfaces"}}},{"node":{"fields":{"slug":"/faq","title":"FAQs"}}},{"node":{"fields":{"slug":"/tutorials/03-crud","title":"Hypi GraphQL CRUD Tutorial"}}},{"node":{"fields":{"slug":"/references/02-crud","title":"CRUD"}}},{"node":{"fields":{"slug":"/references/05-aggregations-api","title":"Aggregations API"}}},{"node":{"fields":{"slug":"/references/06-rest-api","title":"RESTful APIs"}}},{"node":{"fields":{"slug":"/getting-started/02-angular","title":"Hypi + Angular"}}},{"node":{"fields":{"slug":"/tutorials/00-graphql/02-schema-and-types","title":"Schema & Types"}}},{"node":{"fields":{"slug":"/references/02-arcql","title":"ArcQL Filtering"}}}]}},"pageContext":{"isCreatedByStatefulCreatePages":false,"id":"5661fe48-8184-5498-99dc-061bb29d0f84"}}}